# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # #                                      DO NOT EDIT  !!                                  # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Component of climate:
external_components:
  - source:
      url: https://github.com/fabiocguerreiro/tclac.git
      type: git
      ref: master
    components: [ tclac ]
    refresh: 30s

# ESPHome Configuration:
esphome:
  name: ${device_name}
  friendly_name: ${humanly_name}
  on_boot:
    priority: -100
    then:
      lambda: !lambda |-
        if (id(beep_mode).state){
          id(${device_name}climate).set_beeper_state(true);
        } else {
          id(${device_name}climate).set_beeper_state(false);
        }
        if (id(display_mode).state){
          id(${device_name}climate).set_display_state(true);
        } else {
          id(${device_name}climate).set_display_state(false);
        }
        if (id(ledflash_mode).state){
          id(${device_name}climate).set_module_display_state(true);
        } else {
          id(${device_name}climate).set_module_display_state(false);
        }

        if (id(vswing).active_index() == 0){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UP_DOWN);
        } else if (id(vswing).active_index() == 1){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UPSIDE);
        } else if (id(vswing).active_index() == 2){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::DOWNSIDE);
        }

        if (id(hswing).active_index() == 0){
          id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::LEFT_RIGHT);
        } else if (id(hswing).active_index() == 1){
          id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::LEFTSIDE);
        } else if (id(hswing).active_index() == 2){
          id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::CENTER);
        } else if (id(hswing).active_index() == 3){
          id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::RIGHTSIDE);
        }
        
        if (id(vfixing).active_index() == 0){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
        } else if (id(vfixing).active_index() == 1){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_UP);
        } else if (id(vfixing).active_index() == 2){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
        } else if (id(vfixing).active_index() == 3){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::CENTER);
        } else if (id(vfixing).active_index() == 4){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
        } else if (id(vfixing).active_index() == 5){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
        }
        
        if (id(vswing).active_index() == 0){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LAST);
        } else if (id(vswing).active_index() == 1){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::MAX_LEFT);
        } else if (id(vswing).active_index() == 2){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LEFT);
        } else if (id(vswing).active_index() == 3){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::CENTER);
        } else if (id(vswing).active_index() == 4){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::RIGHT);
        } else if (id(vswing).active_index() == 5){
          id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::MAX_RIGHT);
        }

uart:
  baud_rate: 9600
  data_bits: 8
  parity: EVEN
  stop_bits: 1
  rx_pin: ${uart_rx}
  tx_pin: ${uart_tx}

api:
  encryption:
    key: "${api_key}"

ota:
  password: "${ota_pass}"

wifi:
  id: "${device_name}_wifi"
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "${device_name} Fallback Hotspot"
    password: "${recovery_pass}"

captive_portal:


# # # # # # # # # # # # # # # # # # # # # # #
# # # # #        DO NOT EDIT!       # # # # #
# # # # # # # # # # # # # # # # # # # # # # #

# Ensure logging through UART is DISABLED
logger:
  baud_rate: 0

# Device Settings Section:
# - Switches
switch:
# Audible confirmation for commands, defaults to off
  - name: Beeper
    platform: template
    device_class: switch
    id: beep_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(false);
  
# Temperature setting indicator on the internal unit casing, defaults to on
  - name: Display
    platform: template
    device_class: switch
    id: display_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(false);
  
  # Data exchange LED indication with the air conditioner, defaults to off
  - name: Mostrar TX/RX
    platform: template
    device_class: switch
    id: ledflash_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_module_display_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_module_display_state(false);

# - Dropdown menus
select:
  # Vertical swing adjustment
  - platform: template
    name: Balanço Vertical
    id: vswing
    entity_category: config
    options:
      - "Cima a Baixo"
      - "Meio para Cima"
      - "Meio para Baixo"
    optimistic: true
    restore_value: true
    set_action:
      then:
        lambda: !lambda |-
          if (id(vswing).active_index() == 0){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UP_DOWN);
          } else if (id(vswing).active_index() == 1){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UPSIDE);
          } else if (id(vswing).active_index() == 2){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::DOWNSIDE);
          }

  # Horizontal swing adjustment
  - platform: template
    name: Balanço Horizontal
    id: hswing
    entity_category: config
    options:
      - "Esquerda para Direita"
      - "Na Esquerda"
      - "No Centro"
      - "Na Direita"
    optimistic: true
    restore_value: true
    set_action:
      then:
        lambda: !lambda |-
          if (id(hswing).active_index() == 0){
            id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::LEFT_RIGHT);
          } else if (id(hswing).active_index() == 1){
            id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::LEFTSIDE);
          } else if (id(hswing).active_index() == 2){
            id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::CENTER);
          } else if (id(hswing).active_index() == 3){
            id(${device_name}climate).set_horizontal_swing_direction(esphome::tclac::HorizontalSwingDirection::RIGHTSIDE);
          }

 # Vertical louver fixation setting
  - platform: template
    name: Posição Vertical
    id: vfixing
    entity_category: config
    options:
      - Ultima Configuração
      - Máximo
      - Cima
      - Centro
      - Baixo
      - Minimo
    optimistic: true
    restore_value: true
    set_action:
      then:
        lambda: !lambda |-
          if (id(vfixing).active_index() == 0){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
          } else if (id(vfixing).active_index() == 1){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_UP);
          } else if (id(vfixing).active_index() == 2){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
          } else if (id(vfixing).active_index() == 3){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::CENTER);
          } else if (id(vfixing).active_index() == 4){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
          } else if (id(vfixing).active_index() == 5){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
          }

# Horizontal louver fixation setting
  - platform: template
    name: Posição Horizontal
    id: hfixing
    entity_category: config
    options:
      - "Ultima Configuração"
      - "Esquerda"
      - "Esquerda-Centro"
      - "Centro"
      - "Direita-Centro"
      - "Direita"
    optimistic: true
    restore_value: true
    set_action:
      then:
        lambda: !lambda |-
          if (id(vswing).active_index() == 0){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LAST);
          } else if (id(vswing).active_index() == 1){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::MAX_LEFT);
          } else if (id(vswing).active_index() == 2){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::LEFT);
          } else if (id(vswing).active_index() == 3){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::CENTER);
          } else if (id(vswing).active_index() == 4){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::RIGHT);
          } else if (id(vswing).active_index() == 5){
            id(${device_name}climate).set_horizontal_airflow(esphome::tclac::AirflowHorizontalDirection::MAX_RIGHT);
          }

climate:
  - platform: tclac
    name: "${device_name} Climate"
    id: ${device_name}climate
