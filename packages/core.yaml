external_components:
  - source:
      url: https://github.com/fabiocguerreiro/kuboac.git
      type: git
      ref: master
    components: [ tclac ]
    refresh: 30s
    
esphome:
  name: ${device_name}
  min_version: 2023.3.0
  friendly_name: ${humanly_name}
  on_boot:
    priority: -100
    then:
      lambda: !lambda |-
        if (id(beep_mode).state){
          id(${device_name}climate).set_beeper_state(true);
        } else {
          id(${device_name}climate).set_beeper_state(false);
        }
        if (id(display_mode).state){
          id(${device_name}climate).set_display_state(true);
        } else {
          id(${device_name}climate).set_display_state(false);
        }
        if (id(force_mode).state){
          id(${device_name}climate).set_force_mode_state(true);
        } else {
          id(${device_name}climate).set_force_mode_state(false);
        }
        
        if (id(vswing).active_index() == 0){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UP_DOWN);
        } else if (id(vswing).active_index() == 1){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UPSIDE);
        } else if (id(vswing).active_index() == 2){
          id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::DOWNSIDE);
        }
        
        if (id(vfixing).active_index() == 0){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
        } else if (id(vfixing).active_index() == 1){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_UP);
        } else if (id(vfixing).active_index() == 2){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
        } else if (id(vfixing).active_index() == 3){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::CENTER);
        } else if (id(vfixing).active_index() == 4){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
        } else if (id(vfixing).active_index() == 5){
          id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
        }

uart:
  baud_rate: 9600
  data_bits: 8
  parity: EVEN
  stop_bits: 1
  rx_pin: ${uart_rx}
  tx_pin: ${uart_tx}

api:
  encryption:
    key: "${api_key}"

ota:
  password: "${ota_pass}"

wifi:
  id: "${device_name}_wifi"
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "${device_name} Fallback Hotspot"
    password: "${recovery_pass}"

captive_portal:

logger:
  baud_rate: 0

switch:
  - name: Som
    platform: template
    device_class: switch
    id: beep_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_beeper_state(false);
  
  - name: Ecrã
    platform: template
    device_class: switch
    id: display_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_display_state(false);
            
  - name: Aplicar configuração
    platform: template
    device_class: switch
    id: force_mode
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    on_turn_on:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_force_mode_state(true);
    on_turn_off:
      then:
        lambda: !lambda |-
          id(${device_name}climate).set_force_mode_state(false);

select:
  - platform: template
    name: Balanço Vertical
    id: vswing
    entity_category: config
    options:
      - "SUPERIOR <-> INFERIOR"
      - "METADE SUPERIOR"
      - "METADE INFERIOR"
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(vswing).active_index() == 0){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UP_DOWN);
          } else if (id(vswing).active_index() == 1){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::UPSIDE);
          } else if (id(vswing).active_index() == 2){
            id(${device_name}climate).set_vertical_swing_direction(esphome::tclac::VerticalSwingDirection::DOWNSIDE);
          }

  - platform: template
    name: Posição Vertical
    id: vfixing
    entity_category: config
    options:
      - ULTIMA CONFIG
      - MAXIMO
      - CIMA
      - CENTRO
      - BAIXO
      - MINIMO
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: !lambda |-
          if (id(vfixing).active_index() == 0){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::LAST);
          } else if (id(vfixing).active_index() == 1){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_UP);
          } else if (id(vfixing).active_index() == 2){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::UP);
          } else if (id(vfixing).active_index() == 3){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::CENTER);
          } else if (id(vfixing).active_index() == 4){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::DOWN);
          } else if (id(vfixing).active_index() == 5){
            id(${device_name}climate).set_vertical_airflow(esphome::tclac::AirflowVerticalDirection::MAX_DOWN);
          }

climate:
  - platform: tclac
    name: "${device_name} Climate"
    id: ${device_name}climate
